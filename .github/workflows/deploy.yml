name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Extract version from package.json
        id: version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Deploying version: $VERSION"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Create versioned directory structure
        run: |
          mkdir -p pages/v${{ steps.version.outputs.VERSION }}
          mkdir -p pages/latest
          cp -r dist/* pages/v${{ steps.version.outputs.VERSION }}/
          cp -r dist/* pages/latest/
          echo "<h1>@tenum/ui-library v${{ steps.version.outputs.VERSION }}</h1><ul><li><a href='./latest/remoteEntry.js'>Latest</a></li><li><a href='./v${{ steps.version.outputs.VERSION }}/remoteEntry.js'>v${{ steps.version.outputs.VERSION }}</a></li></ul>" > pages/index.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'pages'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
